#BlueJ class context
comment0.target=class\ DBSClass
comment0.text=\n<p>You\ do\ want\ the\ characters\ to\ improve\ over\ time\ and\ learn\ new\ skills,\nright?\ That's\ where\ DBSClass\ comes\ in.\ A\ character\ learns\ moves\ from\ this\nclass.\ When\ a\ character\ levels\ up,\ (s)he\ gains\ a\ skill\ point,\ or\ SP,\ that\ngoes\ to\ the\ class.\ When\ a\ character\ has\ accumulated\ enough\ SP,\ (s)he\ learns\na\ move.</p>\n<p>When\ a\ character\ reaches\ a\ certain\ threshold\ of\ SP,\ (s)he\ can\ progress\ a\nlevel\ in\ that\ class.\ Going\ up\ a\ level\ means\ the\ opprotunity\ to\ learn\ more\npowerful\ versions\ of\ previous\ moves\ as\ well\ as\ gaining\ a\ new\ Adrenaline\nRush.\ However,\ a\ move\ cannot\ be\ learned\ in\ a\ higher\ level\ until\ it\ is\nlearned\ in\ a\ lower\ level.</p>\n<p>For\ example,\ Ronyo,\ a\ level\ one\ White\ Mage\ can\ learn\ Heal,\ Cure,\nFireworks,\ and\ Life.\ The\ Adrenaline\ Rush\ for\ level\ one\ is\nFlash.\ For\ level\ two,\ Ronyo\ can\ learn\ Heal2,\ Protect,\ Trance,\ and\ Life2,\nwith\ the\ Adrenaline\ being\ Pierce.\ However,\ Ronyo\ can't\ learn\ Life2\ until\nhe's\ learned\ Life,\ or\ for\ that\ matter,\ he\ can't\ learn\ Protect\ until\ he's\nlearned\ Cure.\ In\ order\ to\ get\ to\ the\ high-powered\ moves,\ he\ must\ go\ back\nto\ level\ one\ and\ learn\ the\ basic\ versions.</p>\n\n@author\ Evan\ Hildreth\ (root\ -1\ Entertainment)\ \n@version\ 0.1\ Java\n\n
comment1.params=
comment1.target=boolean\ LevelDown()
comment10.target=Cost
comment11.target=Atk
comment12.params=
comment12.target=int\ Level()
comment13.params=level\ ind
comment13.target=boolean\ IsLearned(int,int)
comment14.params=
comment14.target=int\ AtkPerLevel()
comment15.params=
comment15.target=int\ SP()
comment16.params=
comment16.target=DBSClass()
comment17.params=numLevels\ atkPerLv\ attacks\ costs\ rushes
comment17.target=DBSClass(int,int,DBSAttack[],int[],DBSAttack[])
comment18.params=job
comment18.target=DBSClass(DBSClass)
comment18.text=\nThis\ constructor\ makes\ a\ brand\ new\ class\ using\ the\nattacks\ from\ the\ given\ class.\ Used\ when\ making\ new\ncharacters.\n\n
comment19.target=myNumLevels
comment2.target=myInfoMatrix
comment20.params=
comment20.target=boolean\ CanLevelUp()
comment21.target=myLevel
comment22.params=
comment22.target=int\ NumLevels()
comment23.params=
comment23.target=int\ AdjustedLevel()
comment24.target=mySP
comment25.params=level
comment25.target=DBSAttack\ GetRush(int)
comment26.params=
comment26.target=DBSAttack\ GetCurrentRush()
comment27.target=SP_Per_Level
comment28.params=level\ ind
comment28.target=DBSAttack\ GetAttack(int,int)
comment29.target=myTotalSP
comment3.target=myAtkPerLevel
comment30.target=myRush
comment31.params=level\ ind
comment31.target=int\ GetCost(int,int)
comment32.params=
comment32.target=int\ TotalSP()
comment4.params=
comment4.target=boolean\ LevelUp()
comment5.params=
comment5.target=void\ Reset()
comment6.params=myChar
comment6.target=void\ SPUp(DBSCharacter)
comment7.params=
comment7.target=DataNode()
comment8.params=nAtk\ nCost
comment8.target=DataNode(DBSAttack,int)
comment9.target=Learned
numComments=33
