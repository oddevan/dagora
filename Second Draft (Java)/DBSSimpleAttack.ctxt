#BlueJ class context
comment0.target=class\ DBSSimpleAttack
comment1.target=cheese
comment10.params=
comment10.target=String\ Status()
comment10.text=\nReturns\ a\ string\ representation\ (the\ name)\ of\ any\ <code>DBSStatus</code>\npossibly\ inflicted\ by\ this\ attack.\ This\ attack\ class\ only\ has\ room\ for\none\ status.\n\n@return\ \ Name\ of\ status\ inflicted\ by\ attack\ (if\ any)\n\n
comment11.params=
comment11.target=int\ Draw()
comment11.text=\nReturns\ amount\ of\ MP\ needed\ to\ attack\n\n@return\ \ Attack's\ draw\ \n\n
comment12.params=
comment12.target=String\ toString()
comment12.text=\nOverrides\ Object.toString().\ Prints\ out\ as\ follows<br>\n[AttackName]\ [AttackType]\ MP\:\ [Draw]\ [Norm\ or\ Magic]\ [IsTeam\ or\ not]\n\n@return\ \ String\ representation\ of\ attack\n\n
comment13.target=myDraw
comment14.target=myStatus
comment15.target=myPow
comment16.params=
comment16.target=boolean\ IsTeam()
comment16.text=\nReturns\ whether\ or\ not\ attack\ attacks\ a\ whole\ team\ or\ just\ one\ person\n\n@return\ \ If\ attack\ attacks\ whole\ team\ \n\n
comment17.params=attacker\ defender\ battle
comment17.target=int\ Exe(DBSCharacter,DBSCharacter,DBSBattle)
comment17.text=\nExecutes\ the\ attack.\ What\ the\ attack\ does\ is\ anyone's\ guess,\ but\ it\nshould\ involve\ the\ attacker\ performing\ some\ damage\ to\ either\ the\ndefender\ or\ the\ defender's\ whole\ team.\n\n@param\ \ attacker\ <code>DBSCharacter</code>\ making\ the\ attack\n@param\ \ defender\ <code>DBSCharacter</code>\ defending\ against\ the\ attack\n@return\ \ amount\ of\ damage\ done\ \n\n
comment18.target=myIsTeam
comment19.params=
comment19.target=boolean\ IsMagic()
comment19.text=\nWhether\ this\ is\ a\ magic\ or\ physical\ based\ attack.\ This\ is\ determined\ by\ the\ninstance\ variables\ again\n\n@return\ true\ if\ magic-based\ attack\n\n
comment2.params=
comment2.target=String\ Name()
comment2.text=\nGets\ the\ name\ of\ the\ attack\n\n@return\ \ Attack's\ name\n\n
comment3.target=myName
comment4.target=myIsMagic
comment5.params=
comment5.target=int\ Type()
comment5.text=\nReturns\ the\ type\ of\ the\ attack\ as\ given\ in\ the\n<code>DBSTypeHandle</code>\ class.\n\n@return\ \ Attack's\ type\ \n\n
comment6.target=myType
comment7.params=
comment7.target=DBSSimpleAttack()
comment7.text=\nDefault\ constructor\n\n
comment8.params=name\ type\ pow\ draw\ isTeam\ status\ isMagic
comment8.target=DBSSimpleAttack(String,int,int,int,boolean,int,boolean)
comment8.text=\nMain\ constructor\n\n
comment9.params=
comment9.target=int\ Pow()
comment9.text=\nReturns\ relative\ power\ of\ the\ attack\n\n@return\ \ Attack's\ power\ \n\n
numComments=20
